// <auto-generated/>
#pragma warning disable
#nullable enable annotations


using System.Threading;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Components;
using System.Numerics;

namespace Microsoft.JSInterop;

public partial interface ITSRuntime {
    /// <summary>
    /// <para>Invokes in script 'site' the JS-function 'Test' asynchronously.</para>
    /// </summary>
    /// <param name="cancellationToken">A cancellation token to signal the cancellation of the operation. Specifying this parameter will override any default cancellations such as due to timeouts (<see cref="JSRuntime.DefaultAsyncTimeout"/>) from being applied.</param>
    /// <returns>A Task that will complete when the JS-Function have completed.</returns>
    public Task TestInvokeAsync(CancellationToken cancellationToken = default)
        => TSInvokeAsync<Infrastructure.IJSVoidResult>("Test", [], cancellationToken) switch {
            ValueTask<Infrastructure.IJSVoidResult> { IsCompleted: true } => Task.CompletedTask,
            ValueTask<Infrastructure.IJSVoidResult> task => task.AsTask()
        };
}
